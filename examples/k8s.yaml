---
apiVersion: v1
kind: ConfigMap
metadata:
  name: technitium-config
data:
  config.yaml: |-
    dnsSettings:
      dnsServerDomain: "technitium.somedomain.com"
      recursion: Deny
      logQueries: false
      loggingType: FileAndConsole
      useLocalTime: true
      maxLogFileDays: 7
      maxStatFileDays: 365
      qpmLimitRequests: 0
      qpmLimitErrors: 0
      enableDnsOverUdpProxy:  true
      enableDnsOverTcpProxy:  true
      enableDnsOverHttp:      true
      enableDnsOverTls:       true
      enableDnsOverHttps:     true
      enableDnsOverHttp3:     true
      enableDnsOverQuic:      true
      udpPayloadSize:         1232
      resolverConcurrency:    4
      forwarderConcurrency:   10
      forwarderTimeout:       2000
      forwarderRetries:       2
      concurrentForwarding:   true
      cacheMaximumEntries:    0
      serveStale:             true
      serveStaleTtl:          86400
      cacheNegativeRecordTtl: 60
      tsigKeys:
      - keyName: "external-dns"
        algorithmName: "hmac-sha256"
        sharedSecret: "somesecret"
    zones:
      - zone:  "somedomain.com"
        type:  "Forwarder"
        initializeForwarder: true
        protocol: "Udp"
        forwarder: "172.0.0.1"
        dnssecValidation: false
        aclSettings:
          queryAccess: AllowOnlyPrivateNetworks
          zoneTransfer: UseSpecifiedNetworkACL
          zoneTransferNetworkACL: ["172.0.0.0/8"]
          zoneTransferTsigKeyNames: ["external-dns"]
          update: "UseSpecifiedNetworkACL"
          updateNetworkACL:
            - "172.0.0.0/8"
          updateSecurityPolicies: >
            external-dns|*.somedomain.com|ANY
            |external-dns|somedomain.com|ANY
      - zone:  "someotherdomain.com"
        type:  "Forwarder"
        initializeForwarder: true
        protocol: "Https"
        forwarder: "https://cloudflare-dns.com/dns-query"
        dnssecValidation: true
    records: [ ]
    apps:
      - name: "Advanced Blocking"
        url: "https://download.technitium.com/dns/apps/AdvancedBlockingApp-v8.zip"
        config:
          enableBlocking: true
          blockListUrlUpdateIntervalHours: 24
          networkGroupMap:
            "0.0.0.0/0":      "home"
            "::/0":           "home"
          groups:
            - name: home
              enableBlocking: true
              allowTxtBlockingReport: true
              blockAsNxDomain: true
              blockingAddresses: [ "0.0.0.0", "::" ]
              allowed: []
              blocked: []
              allowListUrls: []
              allowedRegex: []
              blockedRegex: []
              regexAllowListUrls: []
              regexBlockListUrls: []
              adblockListUrls: []
              blockListUrls:
                - "https://raw.githubusercontent.com/xRuffKez/NRD/refs/heads/main/lists/14-day/wildcard/nrd-14day_wildcard.txt"
                - "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/wildcard/pro-onlydomains.txt"
                - "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/wildcard/doh-vpn-proxy-bypass-onlydomains.txt"
                - "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/wildcard/doh-onlydomains.txt"
                - "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/wildcard/nosafesearch-onlydomains.txt"
                - "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/wildcard/dyndns-onlydomains.txt"
      - name: "Advanced Forwarding"
        url:  "https://download.technitium.com/dns/apps/AdvancedForwardingApp-v3.1.zip"
        config:
          enableForwarding: true
          forwarders:
            - name: "opendns"
              dnssecValidation: true
              forwarderProtocol: "Https"
              forwarderAddresses:
                - "https://doh.opendns.com/dns-query"
            - name: "cloudflare"
              dnssecValidation: true
              forwarderProtocol: "Tls"
              forwarderAddresses:
                - "tls://1.1.1.1"
                - "tls://1.0.0.1"
            - name: "quad9"
              dnssecValidation: true
              forwarderProtocol: "Https"
              forwarderAddresses:
                - "https://dns.quad9.net/dns-query"
          networkGroupMap:
            "0.0.0.0/0": "default"
            "::/0":      "default"
          groups:
            - name: "default"
              enableForwarding: true
              forwardings:
                - forwarders: ["opendns", "cloudflare", "quad9"]
                  domains: ["*"]
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: technitium-credentials
spec:
  refreshInterval: 48h
  secretStoreRef:
    kind: ClusterSecretStore
    name: mysecretstore
  target:
    deletionPolicy: Delete
    creationPolicy: Owner
  data:
    - secretKey: username
      remoteRef:
        key: technitium-credentials/username
    - secretKey: password
      remoteRef:
        key: technitium-credentials/default_password
    - secretKey: new_password
      remoteRef:
        key: technitium-credentials/password
---
apiVersion: batch/v1
kind: Job
metadata:
  name: technitium-configurator
spec:
  template:
    spec:
      serviceAccountName: technitium-configur
      initContainers:
      - name: create-token
        image: ashtonian/technitium-configurator:1.25
        args: ["create-token"]
        env:
          - name: DNS_API_URL
            value: http://172.0.0.2
          - name: DNS_USERNAME
            valueFrom:
              secretKeyRef:
                name: technitium-credentials
                key: username
          - name: DNS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: technitium-credentials
                key: new_password
          - name: DNS_K8S_SECRET_NAME
            value: technitium-api-token
          - name: DNS_K8S_SECRET_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DNS_K8S_SECRET_KEY
            value: api-token
      - name: change-password
        image: ashtonian/technitium-configurator:1.25
        args:
          - change-password
        env:
          - name: DNS_API_URL
            value: http://172.0.0.2
          - name: DNS_USERNAME
            valueFrom:
              secretKeyRef:
                name: technitium-credentials
                key: username
          - name: DNS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: technitium-credentials
                key: password
          - name: DNS_NEW_PASSWORD
            valueFrom:
              secretKeyRef:
                name: technitium-credentials
                key: new_password
      containers:
      - name: technitium-configurator
        image: ashtonian/technitium-configurator:1.25
        args:
          - configure
          - /app/config.yaml
        env:
          - name: DNS_API_URL
            value: http://172.0.0.2
          - name: DNS_USERNAME
            valueFrom:
              secretKeyRef:
                name: technitium-credentials
                key: username
          - name: DNS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: technitium-credentials
                key: new_password
        volumeMounts:
          - name: config-volume
            mountPath: /app/config.yaml
            subPath: config.yaml
      volumes:
      - name: config-volume
        configMap:
          name: technitium-config
      restartPolicy: OnFailure
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: technitium-configur
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: technitium-configur
subjects:
- kind: ServiceAccount
  name: technitium-configur
  namespace: default
roleRef:
  kind: Role
  name: technitium-configur
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: technitium-configur
